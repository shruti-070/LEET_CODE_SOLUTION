class Solution 
{
    public int[][] merge(int[][] intervals) 
    {
        Arrays.sort(intervals,(a,b)-> Integer.compare(a[0],b[0]));
        Stack<int[]> stk = new Stack();
        stk.push(intervals[0]);
        int n = intervals.length;
        for(int i=1; i<n ; i++)
        {
            int newstart2 = intervals[i][0];
            int newend2 = intervals[i][1];
            int[] poparr = stk.pop();
            int newstart1 = poparr[0];
            int newend1 = poparr[1];
            int maxend = Math.max(newend1,newend2);
            if(newend1>=newstart2)
            {
                int[] merge = new int[]{newstart1,maxend};
                stk.push(merge);
            }
            else
            {
                stk.push(poparr);
                stk.push(intervals[i]);
            }
        }
        int[][] output = new int[stk.size()][2];
        for(int i=output.length-1 ; i>=0 ; i--)
        {
            int[] poparr = stk.pop();
            output[i][0] = poparr[0];
            output[i][1] = poparr[1];
        }
        return output;
    }
}
